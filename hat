local ReGui = loadstring(game:HttpGet('https://raw.githubusercontent.com/depthso/Dear-ReGui/refs/heads/main/ReGui.lua'))()
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local TextChatService = game:GetService("TextChatService")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local Backpack = LocalPlayer.Backpack

-- Cache
if not isfolder("APR") then makefolder("APR") end

local function gc()
	return LocalPlayer.Character or false
end

local function findtool(name)
	for _,v in pairs(Players:GetPlayers()) do
		for _,t in pairs(v.Backpack:GetChildren()) do
			if t.Name == name then
				return t
			end
		end
	end
end

local function SendMsg(str,hide)
    if hide then
        TextChatService.TextChannels.RBXSystem:SendAsync(str)
    else
        TextChatService.TextChannels.RBXGeneral:SendAsync(str)
    end
end

local Window = ReGui:TabsWindow({
	Title = "APR | All Purpose Rabbit🐇",
	Size = UDim2.fromOffset(300, 200)
})

local tab1 = Window:CreateTab({Name="Main"})
local tab2 = Window:CreateTab({Name="Protection"})
local tab3 = Window:CreateTab({Name="Bkit"})


tab1:Label({Text="Update 16"})

local servs = tab1:Row()
servs:Label({Text="Join..."})
servs:Button({
	Text = " XL ",
	Callback = function()
		ReplicatedStorage.System:FireServer("xl")
	end,
})
servs:Button({
	Text = " VC ",
	Callback = function()
		ReplicatedStorage.JoinXL:FireServer("vc")
	end,
})
servs:Button({
	Text = " OG ",
	Callback = function()
		ReplicatedStorage.JoinXL:FireServer("og")
	end,
})

local arkc2
tab2:Checkbox({
	Value = false,
	Label = "Auto reset on enlighten",
	Callback = function(self, Value: boolean)
		if Value then
			arkc2 = LocalPlayer.CharacterAdded:Connect(function(char)char.ChildAdded:Connect(function(ins)
				if ins.Name == "The Arkenstone" then
					SendMsg("reset")
				end
			end)end)
			gc().ChildAdded:Connect(function(ins)
				if ins.Name == "The Arkenstone" then
					SendMsg("reset")
				end
			end)
		else
			if arkc2 then
				arkc2:Disconnect()
			end
		end
	end
})

local antiglitch
local charcon
tab2:Checkbox({
	Value = false,
	Label = "Anti glitch",
	Callback = function(self, Value: boolean)
		local char = gc()
		if Value and char and char:FindFirstChild("HumanoidRootPart") then
			charcon = LocalPlayer.CharacterAdded:Connect(function(cc)
				antiglitch = cc:WaitForChild("HumanoidRootPart"):GetPropertyChangedSignal("CFrame"):Connect(function()
					if cc.HumanoidRootPart.Position == Vector3.new(1234567,1234567,1234567) then
						cc.HumanoidRootPart.CFrame = CFrame.new(0,20,0)
					end
				end)
			end)
			antiglitch = char.HumanoidRootPart:GetPropertyChangedSignal("CFrame"):Connect(function()
				if char.HumanoidRootPart.Position == Vector3.new(1234567,1234567,1234567) then
					char.HumanoidRootPart.CFrame = CFrame.new(0,20,0)
				end
			end)
		else
			if antiglitch then
				antiglitch:Disconnect()
			end
			if charcon then
				charcon:Disconnect()
			end
		end
	end
})

tab3:Button({
	Text = "Clear map",
	Callback = function()
        local h=LocalPlayer.Character.HumanoidRootPart
        for _,v in pairs(workspace.Bricks:GetDescendants()) do
            if v.Name == "Brick" then
                local args = {
                    v,
                    h.Position--v.Position+Vector3.new(0,v.Size.Y/2,0)
                }
                findtool("Delete"):WaitForChild("Script"):WaitForChild("Event"):FireServer(unpack(args))
                wait(.05)
            end
        end
	end,
})
tab3:Checkbox({
	Value = false,
	Label = "Disable bkit",
	Callback = function(self, Value: boolean)
		if Value then
			while Value do
				local h=LocalPlayer.Character.HumanoidRootPart
        		for _,v in pairs(workspace.Bricks:GetDescendants()) do
            		if v.Name == "Brick" then
                		local args = {
                    		v,
                    		h.Position--v.Position+Vector3.new(0,v.Size.Y/2,0)
                		}
						local tool = findtool("Delete")
						if tool then
                		tool:WaitForChild("Script"):WaitForChild("Event"):FireServer(unpack(args))
						end
                		wait(.05)
            		end
        		end
					wait(1)
			end	
		end
	end	
})

--Popup
if not isfile("APR/HidePopup.txt")  then
local ModalWindow = Window:PopupModal({
	Title = "Credits"
}) --> Canvas

ModalWindow:Label({
	Text = "Script by doingbadlysofar, ReGui library by depthso",
	TextWrapped = true
})
ModalWindow:Separator()
local dsa = false
ModalWindow:Checkbox({
	Value = false,
	Label = "Don't show again",
	Callback = function(self, Value: boolean)
		dsa = Value
	end
})

local Row = ModalWindow:Row({
	Expanded = true
}) --> Canvas
Row:Button({
	Text = "Enter",
	Callback = function()
		if dsa then
			writefile("APR/HidePopup.txt","")
		end
		ModalWindow:ClosePopup()
	end,
})
end
